#!/usr/bin/bash
clear
#variables
function variable {
place="Machilipatnam"
name="kalaiselvan"
scan_DOcode="AI_067"

}
#title card
function title {
echo
echo
echo -e "                                                         \033[1;32m  LIC ${place} DO\033[0m"
echo -e "                                                    \033[4;31mThis script written by $(echo ${name}|tr [a-z] [A-Z])\033[0m"
echo
echo -e "                                                                \033[4;35mDISCLAMER\033[0m"
echo "                         If you upload the DVD file then don't delete the DVD file run this command 'kalaiselvan'
                              it will upload soft files on IT Programmer after you can delete that DVD file."
echo
}

if [ ! -s ./info.conf ]
then
	echo "info.conf file is not avilable!!!"
	exit 1
else
	username=$(grep -i 'username' ./info.conf | awk -F = '{ print $2 }')
	ipaddr=$(grep -i 'ipaddr' ./info.conf | awk -F = '{ print $2 }')
fi
it_programmer="${username}@${ipaddr}:/backup/D067"

#cleate dir variables
function file_variable_create {
masterdir=/root/${name}/
softfile=/root/${name}/soft-summary/
softfiledir=/root/${name}/soft-summary/soft/
summarytemp=/root/${name}/soft-summary/summarytemp/
softlogentry=/root/${name}/soft-summary/soft.csv
summarylogentry=/root/${name}/soft-summary/summary.csv
oldsoftfile=/root/${name}/oldsoftfile/
}
#check dirctory and file
function dir_checking {
#check parent dir
if [ ! -d ${masterdir} ]
then
    echo
    mkdir -p ${masterdir}
    echo "base directory created."
fi
#check work dir
if [ ! -d ${softfile} ]
then
    echo
    mkdir -p ${softfile}
    echo "work directory created."
fi
#check soft file copy dir
if [ ! -d ${softfiledir} ]
then
    echo
    mkdir -p ${softfiledir}
    echo "soft file directory created."
fi
#check summary temp dir
if [ ! -d ${summarytemp} ]
then
    echo
    mkdir -p ${summarytemp}
    echo "summary directory created."
fi
#check soft file upload entry
if [ ! -e ${softlogentry} ]
then
    echo
    touch ${softlogentry}
    echo "soft log file created."
fi
#summary log entry
if [ ! -e ${summarylogentry} ]
then
    echo
    touch ${summarylogentry}
    echo "summary log file created."
fi
#oldsoftfile
if [ ! -d ${oldsoftfile} ]
then
    echo
    mkdir -p ${oldsoftfile}
    echo "Old soft file directory"
fi
}
#soft files count for old
function old_soft_file_count {
file_count=$(ls ${softfiledir} | wc -l)
echo
echo "Old Soft Files Count : ${file_count}"
sleep 0.5
if [ ${file_count} -ne 0 ]
then
    soft_file_upload
fi
}
#soft file renaming
function soft_file_rename {
cd ${softfiledir}
for i in $(ls *.txt 2> /dev/null)
do
    mv ${softfiledir}${i} ${softfiledir}$(echo ${i} | cut -d . -f 1) 2> /dev/null
    if [ ${?} -ne 0 ]
    then
        echo "${i} Issue accoured on renaming"
    fi
done
cd ~
}
#Dvd file name creating
function dvd_file_name_create {
dvd_name=$(ls /opt/UploadPoint/ | sed "s/ //g")
for i in ${dvd_name}
do
    softno=$(echo "${i}" | cut -d _ -f 2 | sed "s/-//g")
    softfilename=$(echo soft-"${softno}".txt)
    fgrep=$(echo "${softfilename}" | cut -d . -f 1)
    grep -i -w "${fgrep}" ${softlogentry} > /dev/null 2>&1
    if [ ${?} -eq 0 ]
    then
        echo
        echo "This ${fgrep} file already upload. This DVD file ${i} deletable"
        sleep 0.5
    elif [ -s /imagedata1/Logs/Upload/${softfilename} ]
    then
        grep -i "${softfilename}" IAD &> /dev/null 
        if [ ${?} -ne 0 ]
	then
            find /imagedata1/Logs/Upload/ -iname ${softfilename} -type f -exec cp -p {} ${softfiledir} \; 2> /dev/null
            sleep 0.5
	else
	    echo "Agency batch don't need upload to Programmer.."
	fi
    else
        echo
        echo "This file ${i} is Incremental Batch"
        sleep 0.5
    fi
done
}
#check old files uploaded or not
function soft_file_upload {
soft_file_rename
softfilecount=$(ls ${softfiledir})
for i in ${softfilecount}
do
        grep -i -w "${i}" ${softlogentry} > /dev/null 2>&1
        if [ ${?} -ne 0 ]
        then
            echo "${i}" | grep -i "IAD" > /dev/null 2>&1
            if [ ${?} -ne 0 ]
            then
                scp -r ${softfiledir}${i} ${it_programmer} > /dev/null 2>&1
                if [ ${?} -eq 0 ]
                then
                    echo
                    echo "This ${i} file upload successfull"
                    sleep 0.5
		    rm -f ${softfiledir}${i}
                fi
            else
                echo
                echo "This ${i} file is Agency so it's removing"
                rm -f ${softfiledir}${i}
            fi
            grep -i "${i}" ${softlogentry} > /dev/null 2>&1
            if [ ${?} -ne 0 ]
            then
                echo "$(date +%d/%m/%Y--%R)  ${i}  uploaded" >> ${softlogentry}
            else
                echo
                echo "This log already created in softentry.log file"
            fi
        else
            if [ -e ${softfiledir}${i} ]
            then
                echo
                echo "This file is ${i} Already uploaded so it's removing."
                rm -f ${softfiledir}${i}
            fi
        fi
done
}
#current soft files counting
function current_soft_file_count {
file_count=$(ls ${softfiledir} | wc -l)
echo
echo "New Soft Files Count : ${file_count}"
if [ 0 -eq ${file_count} ]
then
        echo
        echo "No soft files for uploading..."
        sleep 0.5
else
        echo
        echo "Soft files checking and sending to IT Programmer...."
        sleep 0.5
        soft_file_upload
fi
}
#summary files copying
function summary_file {
for i in ${dvd_name}
do
   sumval=$(echo "${i}" | cut -d - -f2)
   sumval2=$(echo "${i}" | cut -d - -f3,4 | cut -d _ -f 1)
   find /imagedata1/Logs/Upload/ -iname "SummaryReport-${scan_DOcode}-${sumval}\ -${sumval2}*.log" -type f -exec cp -p {} ${summarytemp} \; 2>/dev/null
   if [ ${?} -ne 0 ]
   then
       echo
       echo "Summary report Not avilable on this batch ${scan_DOcode}-${sumval} -${sumval2}."
   fi
done
cd ${summarytemp}
for i in *''*
do
    mv "${i}" ${summarytemp}$(echo "${i}" | sed 's/ //g') > /dev/null 2>&1
done
cd ~
}
function sumremove {
reg_sec=$(ls ${summarytemp} | wc -l)
if [ ${reg_sec} -ne 0 ]
then
    rm -f ${summarytemp}${i}
fi
}
function sumdata {
batchno=$(cat ${summarytemp}${i} | grep -i "EDMS" | awk '{ print $9 $10 }' | awk -F[ '{ print $2 }' | awk -F] '{ print $1 }')
date=$(cat ${summarytemp}${i} | grep -i "date of upload" | awk '{ print $NF }' | awk -F- '{ print $NF }' | sed 's/\//-/g' | sed 's/\./-/g')
policycount=$(cat ${summarytemp}${i} | grep -i "uploaded" | grep -iE "policy|agency" | awk '{ print $NF }' | awk -F[ '{print $2}' | awk -F] '{ print $1 }')
images=$(cat ${summarytemp}${i} | grep -i "uploaded" | grep -i "images" | awk '{ print $NF }' | awk -F[ '{print $2}' | awk -F] '{ print $1 }')
starttime=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' | awk NR==1 | cut -b 1-5 | sed 's/\./:/g')
endtime=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'|awk NR==2 | cut -d " " -f 2 | cut -b 1-5 | sed 's/\./:/g')
sct=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' | awk NR==1 | sed 's/\./:/g')
ect=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'|awk NR==2 | cut -d " " -f 2 | sed 's/\./:/g')
td=$(date -u -d "0 $(date -u -d "${ect}" +"%s") sec - $(date -u -d "${sct}" +"%s") sec" +"%H:%M:%S")
}
#summary date fetching in files
function summary_data_colect {
for i in $(ls ${summarytemp})
do
    echo "${i}" | grep -i H067 > /dev/null 2>&1
    health=${?}
    echo "${i}" | grep -i IAD > /dev/null 2>&1
    agency=${?}
    grep -i "Trying to insertdivision_067" ${summarytemp}${i} > /dev/null 2>&1
    regular=${?}
    grep -i "Incremental" ${summarytemp}${i} > /dev/null 2>&1
    if [ ${?} -eq 0 ]
    then
        #incremental section
        batchno=$(cat ${summarytemp}${i} | grep -i "EDMS" | awk '{ print $9 $10 }' | awk -F[ '{ print $2 }' | awk -F] '{ print $1 }')
        date=$(cat ${summarytemp}${i} | grep -i "date of upload" | awk '{ print $NF }' | awk -F- '{ print $NF }' | sed 's/\//-/g' | sed 's/\./-/g')
        policycount=$(cat ${summarytemp}${i} | grep -i "uploaded" | grep -i "policy" | awk '{ print $NF }' | awk -F[ '{print $2}' | awk -F] '{ print $1 }')
        images=$(cat ${summarytemp}${i} | grep -i "uploaded" | grep -i "images" | awk '{ print $NF }' | awk -F[ '{print $2}' | awk -F] '{ print $1 }')
        starttime=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' | awk NR==1 | cut -b 1-5 | sed 's/\./:/g')
        endtime=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'|awk NR==2 | cut -d " " -f 2 | cut -b 1-5 | sed 's/\./:/g')
        sct=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' | awk NR==1  | sed 's/\./:/g')
	ect=$(cat ${summarytemp}${i} | grep -Eow '[0-9][0-9].[0-9][0-9].[0-9][0-9]|[0-9][0-9]:[0-9][0-9]:[0-9][0-9]'|awk NR==2 | cut -d " " -f 2 | sed 's/\./:/g')
        td=$(date -u -d "0 $(date -u -d "${ect}" +"%s") sec - $(date -u -d "${sct}" +"%s") sec" +"%H:%M:%S")
        grep "${batchno}" ${summarylogentry} > /dev/null 2>&1
        if [ ${?} -ne 0 ]
        then
            echo
            echo "Incremental Summary log create for this batch ${i}.."
            echo "${batchno},  ${date},  ${policycount},  ${images},  ${starttime},  ${endtime},  ${td}" >> ${summarylogentry}
        fi
        sumremove
    elif [ ${health} -eq 0 ]
    then
        #agengy batch
        sumdata
	grep "${batchno}" ${summarylogentry} > /dev/null 2>&1
        if [ ${?} -ne 0 ]
        then
            echo
            echo "Health Summary log create for this batch ${i}.."
            echo "${batchno},  ${date},  ${policycount},  ${images},  ${starttime},  ${endtime},  ${td}" >> ${summarylogentry}
        fi
     	sumremove
    elif [ ${agency} -eq 0 ]
    then
        #agengy section
        sumdata
	grep "${batchno}" ${summarylogentry} > /dev/null 2>&1
        if [ ${?} -ne 0 ]
        then
            echo
            echo "Agency Summary log create for this batch ${i}.."
            echo "${batchno},  ${date},  ${policycount},  ${images},  ${starttime},  ${endtime},  ${td}" >> ${summarylogentry}
        fi
	sumremove
    elif [ ${regular} -eq 0 ]
    then
        #regular section
	sumdata
        grep "${batchno}" ${summarylogentry} > /dev/null 2>&1
        if [ ${?} -ne 0 ]
        then
            echo
            echo "Regular Summary log create for this batch ${i}.."
            echo "${batchno},  ${date},  ${policycount},  ${images},  ${starttime},  ${endtime},  ${td}" >> ${summarylogentry}
        fi
	sumremove
     else
         echo "That file not contain information is missing ${i}"
     fi
done
}

variable
title
file_variable_create
dir_checking
old_soft_file_count
dvd_file_name_create
current_soft_file_count
summary_file
summary_data_colect
echo
